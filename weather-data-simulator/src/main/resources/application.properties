# --- RabbitMQ Connector General Configuration ---

# Disable RabbitMQ Dev Services to use your local instance
#quarkus.rabbitmq.devservices.enabled=false

# RabbitMQ server host address (Using the correct prefix for global connector configurations)
quarkus.smallrye-messaging-rabbitmq.host=localhost
# RabbitMQ server AMQP port
quarkus.smallrye-messaging-rabbitmq.port=5672
# Username for connection (default RabbitMQ)
quarkus.smallrye-messaging-rabbitmq.username=guest
# Password for connection (default RabbitMQ)
quarkus.smallrye-messaging-rabbitmq.password=guest

# --- Outgoing Channel Configuration ---

# The name 'weather-data-exchange' is the logical channel identifier in your code @Channel("weather-data-exchange")
mp.messaging.outgoing.weather-data-exchange.connector=smallrye-rabbitmq

# Defines the content type of the messages
mp.messaging.outgoing.weather-data-exchange.content_type=application/json

# Name of the exchange in RabbitMQ where messages will be published.
# The OUTGOING channel is usually responsible for declaring the exchange.
mp.messaging.outgoing.weather-data-exchange.exchange.name=weather-data-exchange
mp.messaging.outgoing.weather-data-exchange.exchange.type=direct
mp.messaging.outgoing.weather-data-exchange.exchange.durable=true # Add if you want the exchange to be durable

# Defines the default routing key for messages sent by this channel (optional if you set it in code)
# NOTE: The property is 'routing-key' (singular), not 'routing-keys' (plural)
# NOTE: This value in the configuration is the DEFAULT. The value in code (metadata) OVERRIDES this default.
# If you ALWAYS set the routingKey in the code, this line here can be omitted.
mp.messaging.outgoing.weather-data-exchange.routing-key=weather.data


# --- Incoming Channel Configuration ---

# The name 'raw-data-queue' is the logical channel identifier in your code @Incoming("raw-data-queue")
# This channel will consume messages from the queue 'raw-data-queue'
mp.messaging.incoming.raw-data-queue.connector=smallrye-rabbitmq

# Name of the queue from which this consumer will read
mp.messaging.incoming.raw-data-queue.queue.name=raw-data-queue
# Defines whether the queue should be declared by this consumer
mp.messaging.incoming.raw-data-queue.queue.declare=true
mp.messaging.incoming.raw-data-queue.queue.durable=true # Add if you want the queue to be durable

# Configures the binding of the queue 'raw-data-queue' to the exchange 'weather-data-ex'
# The binding key 'weather.data' will ensure that messages with this routing key arrive in this queue
mp.messaging.incoming.raw-data-queue.queue.binding.exchange.name=weather-data-exchange # Name of the exchange for the binding
mp.messaging.incoming.raw-data-queue.queue.binding.binding-key=weather.data